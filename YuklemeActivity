package com.example.myapplication.view

import android.Manifest
import android.content.Intent
import android.content.pm.PackageManager
import android.net.Uri
import android.os.Bundle
import android.provider.MediaStore
import android.view.View
import android.widget.Toast
import androidx.activity.result.ActivityResultLauncher
import androidx.activity.result.contract.ActivityResultContracts
import androidx.appcompat.app.AppCompatActivity
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import com.example.myapplication.databinding.ActivityYuklemeBinding
import com.google.android.material.snackbar.Snackbar
import com.google.firebase.Firebase
import com.google.firebase.Timestamp
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.auth.auth
import com.google.firebase.firestore.FirebaseFirestore
import com.google.firebase.firestore.firestore
import com.google.firebase.storage.FirebaseStorage
import com.google.firebase.storage.storage
import java.util.UUID

// YuklemeActivity sınıfını AppCompatActivity sınıfından türetiyoruz
class YuklemeActivity : AppCompatActivity() {

    // View Binding kullanmak için activity_yukleme.xml dosyasının bağlantısını oluşturuyoruz
    private lateinit var binding: ActivityYuklemeBinding

    // ActivityResultLauncher ve izin verme işlemleri için değişkenler
    private lateinit var activityResultLauncher: ActivityResultLauncher<Intent>
    private lateinit var permissionLauncher: ActivityResultLauncher<String>

    // Seçilen resmin Uri'si
    var selectedPicture: Uri? = null

    // Firebase Authentication, Firestore ve Storage için değişkenler
    private lateinit var auth: FirebaseAuth
    private lateinit var firestore: FirebaseFirestore
    private lateinit var storage: FirebaseStorage

    // Aktivite oluşturulduğunda çağrılan metot
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        // View Binding ile layout dosyasını bağlıyoruz
        binding = ActivityYuklemeBinding.inflate(layoutInflater)
        val view = binding.root
        setContentView(view)

        // ActivityResultLauncher'ları kaydeden metodu çağırma
        registerLauncher()

        // Firebase Authentication, Firestore ve Storage başlatma
        auth = Firebase.auth
        firestore = Firebase.firestore
        storage = Firebase.storage
    }

    // İndirme butonuna tıklandığında çağrılan metot
    fun indirmeclicked(view: View) {
        val uuid = UUID.randomUUID()
        val imageName = "$uuid.jpg"
        val reference = storage.reference
        val imageReference = reference.child("images/").child(imageName)

        // Seçilen resim null değilse
        if (selectedPicture != null) {
            imageReference.putFile(selectedPicture!!).addOnSuccessListener {
                val uploadPictureReference = storage.reference.child("images").child(imageName)
                uploadPictureReference.downloadUrl.addOnSuccessListener {
                    val downloadUrl = it.toString()
                    // Kullanıcı oturum açtıysa
                    if (auth.currentUser != null) {
                        // Firestore'a veriyi ekleyip işlemi tamamla
                        val postMap = hashMapOf<String, Any>()
                        postMap.put("downloadUrl", downloadUrl)
                        postMap.put("userEmail", auth.currentUser!!.email!!)
                        postMap.put("comment", Timestamp.now())
                        firestore.collection("Postlar").add(postMap).addOnSuccessListener {

                            finish()
                        }.addOnFailureListener {
                            Toast.makeText(this@YuklemeActivity, it.localizedMessage, Toast.LENGTH_LONG).show()
                        }
                    }
                }

            }.addOnFailureListener {
                Toast.makeText(this, it.localizedMessage, Toast.LENGTH_LONG).show()
            }
        }
    }

    // Fotoğraf yükleme butonuna tıklandığında çağrılan metot
    fun fotoyukleme(view: View) {
        // Eğer READ_EXTERNAL_STORAGE izni yoksa
        if (ContextCompat.checkSelfPermission(
                this,
                Manifest.permission.READ_EXTERNAL_STORAGE
            ) != PackageManager.PERMISSION_GRANTED
        ) {
            // İzin daha önce reddedildiyse kullanıcıya açıklama göster
            if (ActivityCompat.shouldShowRequestPermissionRationale(
                    this,
                    Manifest.permission.READ_EXTERNAL_STORAGE
                )
            ) {
                Snackbar.make(view, "Galeri için izin lazım!", Snackbar.LENGTH_INDEFINITE)
                    .setAction("İzin ver") {
                        // İzin ver'e tıklandığında izin iste
                        permissionLauncher.launch(Manifest.permission.READ_EXTERNAL_STORAGE)
                    }.show()
            } else {
                // İlk defa izin isteniyorsa direk izin iste
                permissionLauncher.launch(Manifest.permission.READ_EXTERNAL_STORAGE)
            }
        } else {
            // İzin varsa galeriyi aç
            val intentToGallery = Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI)
            activityResultLauncher.launch(intentToGallery)
        }
    }

    // ActivityResultLauncher'ları kaydeden metot
    private fun registerLauncher() {
        activityResultLauncher = registerForActivityResult(
            ActivityResultContracts.StartActivityForResult()
        ) { result ->
            if (result.resultCode == RESULT_OK) {
                val intentFromResult = result.data
                if (intentFromResult != null) {
                    selectedPicture = intentFromResult.data
                    selectedPicture?.let {
                        binding.imageView.setImageURI(it)
                    }
                }
            }
        }
        permissionLauncher = registerForActivityResult(
            ActivityResultContracts.RequestPermission()
        ) { result ->
            if (result) {
                val intentToGallery = Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI)
                activityResultLauncher.launch(intentToGallery)
            } else {
                Toast.makeText(this@YuklemeActivity, " İzin lazım!", Toast.LENGTH_LONG).show()
            }
        }
    }

}
